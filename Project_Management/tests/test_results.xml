<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="14" skipped="0" tests="39" time="0.368" timestamp="2025-07-09T09:10:52.676027+00:00" hostname="codespaces-1067d2"><testcase classname="tests.test_auto_commit.TestAutoCommit" name="test_auto_commit_and_push_calls_write_json" time="0.018" /><testcase classname="tests.test_auto_commit.TestAutoCommit" name="test_collect_commit_progress" time="0.006" /><testcase classname="tests.test_auto_commit.TestAutoCommit" name="test_write_commit_progress_to_json" time="0.001" /><testcase classname="tests.test_basic.BasicTest" name="test_example" time="0.001" /><testcase classname="tests.test_cli_commands" name="test_cli_help" time="0.015"><failure message="assert 'Project Management Tool CLI' in ''&#10; +  where '' = CompletedProcess(args=['/usr/local/py-utils/venvs/pytest/bin/python', 'projects/current_project/src/cli_commands.py', ...e '/workspaces/ProjectManagement/projects/current_project/src/cli_commands.py': [Errno 2] No such file or directory\n&quot;).stdout">def test_cli_help():
        result = subprocess.run([sys.executable, 'projects/current_project/src/cli_commands.py', '--help'], capture_output=True, text=True)
&gt;       assert "Project Management Tool CLI" in result.stdout
E       assert 'Project Management Tool CLI' in ''
E        +  where '' = CompletedProcess(args=['/usr/local/py-utils/venvs/pytest/bin/python', 'projects/current_project/src/cli_commands.py', ...e '/workspaces/ProjectManagement/projects/current_project/src/cli_commands.py': [Errno 2] No such file or directory\n").stdout

Project_Management/tests/test_cli_commands.py:6: AssertionError</failure></testcase><testcase classname="tests.test_cli_commands" name="test_cli_setup" time="0.015"><failure message="assert 'Setup completed successfully.' in ''&#10; +  where '' = CompletedProcess(args=['/usr/local/py-utils/venvs/pytest/bin/python', 'projects/current_project/src/cli_commands.py', ...e '/workspaces/ProjectManagement/projects/current_project/src/cli_commands.py': [Errno 2] No such file or directory\n&quot;).stdout">def test_cli_setup():
        result = subprocess.run([sys.executable, 'projects/current_project/src/cli_commands.py', 'setup'], capture_output=True, text=True)
&gt;       assert "Setup completed successfully." in result.stdout
E       assert 'Setup completed successfully.' in ''
E        +  where '' = CompletedProcess(args=['/usr/local/py-utils/venvs/pytest/bin/python', 'projects/current_project/src/cli_commands.py', ...e '/workspaces/ProjectManagement/projects/current_project/src/cli_commands.py': [Errno 2] No such file or directory\n").stdout

Project_Management/tests/test_cli_commands.py:10: AssertionError</failure></testcase><testcase classname="tests.test_cli_commands" name="test_cli_status" time="0.016"><failure message="assert 'Configuration:' in ''&#10; +  where '' = CompletedProcess(args=['/usr/local/py-utils/venvs/pytest/bin/python', 'projects/current_project/src/cli_commands.py', ...e '/workspaces/ProjectManagement/projects/current_project/src/cli_commands.py': [Errno 2] No such file or directory\n&quot;).stdout">def test_cli_status():
        result = subprocess.run([sys.executable, 'projects/current_project/src/cli_commands.py', 'status'], capture_output=True, text=True)
&gt;       assert "Configuration:" in result.stdout
E       assert 'Configuration:' in ''
E        +  where '' = CompletedProcess(args=['/usr/local/py-utils/venvs/pytest/bin/python', 'projects/current_project/src/cli_commands.py', ...e '/workspaces/ProjectManagement/projects/current_project/src/cli_commands.py': [Errno 2] No such file or directory\n").stdout

Project_Management/tests/test_cli_commands.py:14: AssertionError</failure></testcase><testcase classname="tests.test_commit_task_database.TestCommitTaskDatabase" name="test_update_commit_task_database_creates_and_updates" time="0.001" /><testcase classname="tests.test_commit_task_database.TestCommitTaskDatabase" name="test_update_commit_task_database_handles_missing_metadata" time="0.001" /><testcase classname="tests.test_github_integration.TestGitHubIntegration" name="test_get_issues_http_error" time="0.001" /><testcase classname="tests.test_github_integration.TestGitHubIntegration" name="test_get_issues_success" time="0.002" /><testcase classname="tests.test_github_integration.TestGitHubIntegration" name="test_init_without_repo_raises" time="0.001" /><testcase classname="tests.test_github_integration.TestGitHubIntegration" name="test_init_without_token_raises" time="0.001" /><testcase classname="tests.test_github_integration.TestGitHubIntegration" name="test_placeholder_methods_exist" time="0.001" /><testcase classname="tests.test_importance_urgency_report.TestImportanceUrgencyReport" name="test_classification_counts" time="0.001"><failure message="AssertionError: 0 not greater than or equal to 15 : At least 15 tasks should be both important and urgent">self = &lt;Project_Management.tests.test_importance_urgency_report.TestImportanceUrgencyReport testMethod=test_classification_counts&gt;

    def test_classification_counts(self):
        classified = self.tm.classify_tasks_eisenhower()
&gt;       self.assertGreaterEqual(len(classified['do_now']), 15, "At least 15 tasks should be both important and urgent")
E       AssertionError: 0 not greater than or equal to 15 : At least 15 tasks should be both important and urgent

Project_Management/tests/test_importance_urgency_report.py:30: AssertionError</failure></testcase><testcase classname="tests.test_importance_urgency_report.TestImportanceUrgencyReport" name="test_report_generation" time="0.001"><failure message="ModuleNotFoundError: No module named 'importance_urgency_report'">self = &lt;Project_Management.tests.test_importance_urgency_report.TestImportanceUrgencyReport testMethod=test_report_generation&gt;

    def test_report_generation(self):
&gt;       generate_importance_urgency_report(self.tm)

Project_Management/tests/test_importance_urgency_report.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

task_management = &lt;task_management.TaskManagement object at 0x7bc4013fc2f0&gt;

    def generate_importance_urgency_report(task_management=None):
&gt;       from importance_urgency_report import ImportanceUrgencyReport
E       ModuleNotFoundError: No module named 'importance_urgency_report'

Project_Management/modules/progress_report.py:86: ModuleNotFoundError</failure></testcase><testcase classname="tests.test_importance_urgency_report.TestImportanceUrgencyReport" name="test_task_counts" time="0.001"><failure message="AssertionError: 10 not greater than or equal to 30 : Total tasks should be at least 30 for comprehensive report">self = &lt;Project_Management.tests.test_importance_urgency_report.TestImportanceUrgencyReport testMethod=test_task_counts&gt;

    def test_task_counts(self):
        tasks = list(self.tm.tasks.values())
&gt;       self.assertGreaterEqual(len(tasks), 30, "Total tasks should be at least 30 for comprehensive report")
E       AssertionError: 10 not greater than or equal to 30 : Total tasks should be at least 30 for comprehensive report

Project_Management/tests/test_importance_urgency_report.py:26: AssertionError</failure></testcase><testcase classname="tests.test_progress_calculator.TestProgressCalculator" name="test_calculate_combined_progress" time="0.001" /><testcase classname="tests.test_progress_calculator.TestProgressCalculator" name="test_calculate_commit_progress" time="0.001" /><testcase classname="tests.test_progress_calculator.TestProgressCalculator" name="test_calculate_dynamic_importance" time="0.001" /><testcase classname="tests.test_progress_calculator.TestProgressCalculator" name="test_calculate_dynamic_urgency" time="0.001" /><testcase classname="tests.test_progress_calculator.TestProgressCalculator" name="test_calculate_workflow_progress" time="0.001" /><testcase classname="tests.test_progress_calculator.TestProgressCalculator" name="test_enrich_tasks_with_progress" time="0.001" /><testcase classname="tests.test_progress_calculator.TestProgressCalculator" name="test_load_inputs" time="0.001" /><testcase classname="tests.test_progress_report" name="test_generate_progress_report" time="0.001" /><testcase classname="tests.test_progress_report" name="test_progress_report_contains_urgency_importance" time="0.003" /><testcase classname="tests.test_project_management_system.TestProjectManagementSystem" name="test_generate_and_save_all" time="0.002"><failure message="TypeError: GitProgressUpdater.__init__() takes 2 positional arguments but 3 were given">self = &lt;Project_Management.tests.test_project_management_system.TestProjectManagementSystem testMethod=test_generate_and_save_all&gt;

    def test_generate_and_save_all(self):
&gt;       self.report_manager.generate_and_save_all()

Project_Management/tests/test_project_management_system.py:46: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;Project_Management.modules.project_management_system.ReportManager object at 0x7bc401428c80&gt;

    def generate_and_save_all(self):
        ih = InputHandler(self.input_dir)
        inputs = ih.read_json_files()
&gt;       gpu = GitProgressUpdater(inputs.get('workflow_definition', []), self.input_dir)
E       TypeError: GitProgressUpdater.__init__() takes 2 positional arguments but 3 were given

Project_Management/modules/project_management_system.py:294: TypeError</failure></testcase><testcase classname="tests.test_project_management_system.TestProjectManagementSystem" name="test_git_progress_updater" time="0.001"><failure message="TypeError: GitProgressUpdater.__init__() got an unexpected keyword argument 'input_dir'">self = &lt;Project_Management.tests.test_project_management_system.TestProjectManagementSystem testMethod=test_git_progress_updater&gt;

    def test_git_progress_updater(self):
&gt;       gpu = GitProgressUpdater(workflow_definition=[], input_dir=self.input_dir)
E       TypeError: GitProgressUpdater.__init__() got an unexpected keyword argument 'input_dir'

Project_Management/tests/test_project_management_system.py:22: TypeError</failure></testcase><testcase classname="tests.test_project_management_system.TestProjectManagementSystem" name="test_load_inputs" time="0.001"><failure message="AssertionError: 'commit_progress.json' not found in ['wbs_data.json', 'human_resources.json', 'task_resource_allocation.json', 'resource_allocation.json', 'workflow_definition.json', 'detailed_wbs.json', 'wbs_scores.json']">self = &lt;Project_Management.tests.test_project_management_system.TestProjectManagementSystem testMethod=test_load_inputs&gt;

    def test_load_inputs(self):
        self.assertTrue(os.path.exists(self.input_dir))
        files = os.listdir(self.input_dir)
        self.assertIn('detailed_wbs.json', files)
&gt;       self.assertIn('commit_progress.json', files)
E       AssertionError: 'commit_progress.json' not found in ['wbs_data.json', 'human_resources.json', 'task_resource_allocation.json', 'resource_allocation.json', 'workflow_definition.json', 'detailed_wbs.json', 'wbs_scores.json']

Project_Management/tests/test_project_management_system.py:19: AssertionError</failure></testcase><testcase classname="tests.test_project_management_system.TestProjectManagementSystem" name="test_progress_calculation" time="0.001" /><testcase classname="tests.test_project_management_system.TestProjectManagementSystem" name="test_report_generation" time="0.002" /><testcase classname="tests.test_resource_leveling.TestResourceLeveler" name="test_load_and_flatten_tasks" time="0.002"><failure message="AttributeError: 'str' object has no attribute 'copy'">self = &lt;Project_Management.tests.test_resource_leveling.TestResourceLeveler testMethod=test_load_and_flatten_tasks&gt;

    def test_load_and_flatten_tasks(self):
        leveler = ResourceLeveler(self.tasks_filepath, self.allocations_filepath, self.output_filepath)
        leveler.tasks = leveler.load_json_file(self.tasks_filepath)
&gt;       flat_tasks = leveler.flatten_tasks(leveler.tasks)

Project_Management/tests/test_resource_leveling.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;modules.resource_leveling.ResourceLeveler object at 0x7bc4014438f0&gt;, tasks = {'tasks': []}, parent_id = None

    def flatten_tasks(self, tasks, parent_id=None):
        """
        Flatten nested tasks into a list with parent-child relationships.
        """
        flat_list = []
        for task in tasks:
&gt;           task_copy = task.copy()
E           AttributeError: 'str' object has no attribute 'copy'

Project_Management/modules/resource_leveling.py:30: AttributeError</failure></testcase><testcase classname="tests.test_resource_leveling.TestResourceLeveler" name="test_resource_leveling_normal_duration" time="0.002"><failure message="FileNotFoundError: [Errno 2] No such file or directory: 'projects/current_project/docs/task_resource_allocation.json'">self = &lt;Project_Management.tests.test_resource_leveling.TestResourceLeveler testMethod=test_resource_leveling_normal_duration&gt;

    def test_resource_leveling_normal_duration(self):
        leveler = ResourceLeveler(self.tasks_filepath, self.allocations_filepath, self.output_filepath, duration_type='normal')
        leveler.tasks = leveler.load_json_file(self.tasks_filepath)
&gt;       leveler.allocations = leveler.load_json_file(self.allocations_filepath)

Project_Management/tests/test_resource_leveling.py:43: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;modules.resource_leveling.ResourceLeveler object at 0x7bc40142bc50&gt;
filepath = 'projects/current_project/docs/task_resource_allocation.json'

    def load_json_file(self, filepath):
&gt;       with open(filepath, 'r', encoding='utf-8') as f:
E       FileNotFoundError: [Errno 2] No such file or directory: 'projects/current_project/docs/task_resource_allocation.json'

Project_Management/modules/resource_leveling.py:17: FileNotFoundError</failure></testcase><testcase classname="tests.test_resource_leveling.TestResourceLeveler" name="test_resource_leveling_optimistic_duration" time="0.001"><failure message="FileNotFoundError: [Errno 2] No such file or directory: 'projects/current_project/docs/task_resource_allocation.json'">self = &lt;Project_Management.tests.test_resource_leveling.TestResourceLeveler testMethod=test_resource_leveling_optimistic_duration&gt;

    def test_resource_leveling_optimistic_duration(self):
        leveler = ResourceLeveler(self.tasks_filepath, self.allocations_filepath, self.output_filepath, duration_type='optimistic')
        leveler.tasks = leveler.load_json_file(self.tasks_filepath)
&gt;       leveler.allocations = leveler.load_json_file(self.allocations_filepath)

Project_Management/tests/test_resource_leveling.py:58: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;modules.resource_leveling.ResourceLeveler object at 0x7bc401428c80&gt;
filepath = 'projects/current_project/docs/task_resource_allocation.json'

    def load_json_file(self, filepath):
&gt;       with open(filepath, 'r', encoding='utf-8') as f:
E       FileNotFoundError: [Errno 2] No such file or directory: 'projects/current_project/docs/task_resource_allocation.json'

Project_Management/modules/resource_leveling.py:17: FileNotFoundError</failure></testcase><testcase classname="tests.test_resource_leveling.TestResourceLeveler" name="test_run_method_creates_output_file" time="0.001"><failure message="FileNotFoundError: [Errno 2] No such file or directory: 'projects/current_project/docs/task_resource_allocation.json'">self = &lt;Project_Management.tests.test_resource_leveling.TestResourceLeveler testMethod=test_run_method_creates_output_file&gt;

    def test_run_method_creates_output_file(self):
        leveler = ResourceLeveler(self.tasks_filepath, self.allocations_filepath, self.output_filepath)
&gt;       leveler.run()

Project_Management/tests/test_resource_leveling.py:72: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
Project_Management/modules/resource_leveling.py:76: in run
    self.allocations = self.load_json_file(self.allocations_filepath)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;modules.resource_leveling.ResourceLeveler object at 0x7bc40142b620&gt;
filepath = 'projects/current_project/docs/task_resource_allocation.json'

    def load_json_file(self, filepath):
&gt;       with open(filepath, 'r', encoding='utf-8') as f:
E       FileNotFoundError: [Errno 2] No such file or directory: 'projects/current_project/docs/task_resource_allocation.json'

Project_Management/modules/resource_leveling.py:17: FileNotFoundError</failure></testcase><testcase classname="tests.test_task_management.TestTaskManagement" name="test_assign_task" time="0.001" /><testcase classname="tests.test_task_management.TestTaskManagement" name="test_generate_wbs_from_idea" time="0.001" /><testcase classname="tests.test_task_management.TestTaskManagement" name="test_prioritize_tasks" time="0.001"><failure message="AssertionError: 1 != 2">self = &lt;Project_Management.tests.test_task_management.TestTaskManagement testMethod=test_prioritize_tasks&gt;

    def test_prioritize_tasks(self):
        import datetime
        # Create tasks with urgency and importance
        t1 = Task(id=1, title="Task 1", priority=1, deadline=datetime.date.today() + datetime.timedelta(days=3))
        t2 = Task(id=2, title="Task 2", priority=5, deadline=datetime.date.today() + datetime.timedelta(days=1))
        self.tm.tasks = {1: t1, 2: t2}
        sorted_tasks = self.tm.prioritize_tasks()
        # Task 2 should have higher priority due to higher importance and urgency
&gt;       self.assertEqual(sorted_tasks[0].id, 2)
E       AssertionError: 1 != 2

Project_Management/tests/test_task_management.py:46: AssertionError</failure></testcase><testcase classname="tests.test_task_management.TestTaskManagement" name="test_urgency_importance_calculation" time="0.001" /></testsuite></testsuites>